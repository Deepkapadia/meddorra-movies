{"version":3,"sources":["components/contants/axios.js","components/Rows/Row.js","components/contants/requests.js","components/Banner/Banner.js","components/Nav/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailetUrl","setTrailetUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","payerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","lenght","style","backgroundSize","backgroundImage","backgroundPosition","original_name","description","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed4dbb81.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React,{useState,useEffect} from 'react'\nimport axios from '../contants/axios';\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\n\nfunction Row({ title, fetchUrl , isLargeRow}) {\n\nconst [movies,setMovies] = useState([]);\nconst [trailetUrl,setTrailetUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    },[fetchUrl])\n\n    const opts = {\n        height: \"490\",\n        width: \"100%\",\n        payerVars: {\n            autoplay:1\n        }\n    }\nconst handleClick = (movie) => {\n    if (trailetUrl){\n        setTrailetUrl('');\n    } else {\n        movieTrailer(movie?.name || \"\")\n        .then((url) => {\n            const urlParams = new URLSearchParams(new URL(url).search);\n            setTrailetUrl(urlParams.get('v'));\n        })\n        .catch((error) => console.log(error))\n    }\n}\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n        <div className=\"row_posters\">\n            { /*severals row poster */ }\n            {movies.map(movie => (\n                <img \n                key={movie.id}\n                onClick={() => handleClick(movie)}\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} \n                src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                alt={movie.name}/>\n            ))}\n        </div> \n        {trailetUrl && <YouTube videoId={trailetUrl} opts={opts}/> }          \n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY = \"735df9026bafeffb208ec077714f1bcc\";\n\nconst requests = {\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,    \n}\n\nexport default requests;","import React,{useState,useEffect} from 'react'\nimport axios from '../contants/axios';\nimport requests from '../contants/requests';\nimport './Banner.css';\n\nfunction Banner() {\n\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(\n                request.data.results[\n                    Math.floor(Math.random() * request.data.results.lenght - 1)\n                ]\n            );\n            return request;\n        }\n        fetchData();\n    },[]);\n\n    function truncate(str, n) {\n        return str?.lenght > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"banner\"\n        style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\"\n        }}>\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <div className=\"banner__description\">\n                    {truncate(movie?.description,150)}\n                </div>\n                {/* div + 2 buttons */}\n                {/* Descriptions */}\n            </div>\n           <div className=\"banner__fadeBottom\"/>\n        </header>\n    )\n}\n\nexport default Banner\n","import React,{useState,useEffect} from 'react'\nimport './Nav.css'\n\nfunction Nav() {\n\n    const [show,handleShow] = useState(false);\n\n    useEffect(() => {\n       window.addEventListener(\"scroll\", () => {\n           if(window.scrollY > 100) {\n            handleShow(true);\n           }else handleShow(false);\n       });\n       return () => {\n           window.removeEventListener(\"scroll\");\n       }\n    }, [])\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img className=\"nav__logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\n            alt=\"LogoNet\"/>\n\n        <img className=\"nav__avatar\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\n            alt=\"LogoNet\"/>\n        </div>\n    )\n}\n\nexport default Nav\n","import './App.css';\nimport Row from './components/Rows/Row';\nimport requests from './components/contants/requests';\nimport Banner from './components/Banner/Banner';\nimport Nav from './components/Nav/Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav/>\n      <Banner />\n      <Row \n        title=\"Meddoraa Originals\" \n        fetchUrl={requests.fetchNetflixOriginals} \n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Moviews\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Moviews\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Moviews\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Cosumentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}